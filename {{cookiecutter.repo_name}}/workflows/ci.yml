name:  Test Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
        poetry-version: [1.1.9]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test_app
          POSTGRES_DB: ci_test_db
          POSTGRES_PASSWORD: testpassword

    env:
      DJANGO_SECRET_KEY: secret key just for testing
      DATABASE_URL: postgresql://test_app:testpassword@127.0.0.1:5432/ci_test_db
      REDIS_URL: redis://127.0.0.1:6379/0
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry ${{ matrix.poetry-version }}
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}

    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}

    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs

    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Code Quality
      run: |
        poetry run black . --check
        poetry run isort

    - name: Run Tests
      run: |
        poetry run pytest --cov .
